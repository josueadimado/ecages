# Generated by Django 5.2.5 on 2025-09-04 15:21

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('inventory', '0016_add_restock_validation_audit'),
        ('products', '0006_normalize_empty_sku_to_null'),
        ('providers', '0002_brand_provider_delete_tempmodel_brand_provider_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AddField(
            model_name='stocktransaction',
            name='document_id',
            field=models.PositiveIntegerField(blank=True, help_text='ID du document source', null=True),
        ),
        migrations.AddField(
            model_name='stocktransaction',
            name='document_type',
            field=models.CharField(blank=True, default='', help_text='Type de document (Sale, RestockRequest, etc.)', max_length=50),
        ),
        migrations.AddField(
            model_name='stocktransaction',
            name='gps_latitude',
            field=models.DecimalField(blank=True, decimal_places=8, help_text='Latitude GPS', max_digits=10, null=True),
        ),
        migrations.AddField(
            model_name='stocktransaction',
            name='gps_longitude',
            field=models.DecimalField(blank=True, decimal_places=8, help_text='Longitude GPS', max_digits=11, null=True),
        ),
        migrations.AddField(
            model_name='stocktransaction',
            name='is_reversal',
            field=models.BooleanField(default=False, help_text="Indique si c'est une transaction d'annulation"),
        ),
        migrations.AddField(
            model_name='stocktransaction',
            name='notes',
            field=models.TextField(blank=True, default='', help_text='Notes additionnelles'),
        ),
        migrations.AddField(
            model_name='stocktransaction',
            name='photo_url',
            field=models.URLField(blank=True, default='', help_text='URL de la photo de preuve'),
        ),
        migrations.AddField(
            model_name='stocktransaction',
            name='reversal_reason',
            field=models.CharField(blank=True, default='', help_text="Raison de l'annulation", max_length=255),
        ),
        migrations.AddField(
            model_name='stocktransaction',
            name='reversed_transaction',
            field=models.ForeignKey(blank=True, help_text='Transaction annulée par celle-ci', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='reversals', to='inventory.stocktransaction'),
        ),
        migrations.AlterField(
            model_name='stocktransaction',
            name='reason',
            field=models.CharField(choices=[('sale', 'Vente'), ('return', 'Retour client'), ('transfer_in', 'Transfert entrant'), ('transfer_out', 'Transfert sortant'), ('restock', 'Réapprovisionnement'), ('adjustment', 'Ajustement'), ('restock_sent', 'Réapprovisionnement envoyé'), ('restock_received', 'Réapprovisionnement reçu'), ('grn', 'Bon de réception'), ('dn', 'Bon de livraison'), ('cycle_count', 'Inventaire cyclique'), ('write_off', 'Mise au rebut')], max_length=20),
        ),
        migrations.CreateModel(
            name='CycleCount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('draft', 'Brouillon'), ('in_progress', 'En cours'), ('completed', 'Terminé'), ('approved', 'Approuvé')], default='draft', max_length=20)),
                ('count_date', models.DateField(help_text="Date de l'inventaire")),
                ('notes', models.TextField(blank=True, default='')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('approved_at', models.DateTimeField(blank=True, null=True)),
                ('approved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='cycle_counts_approved', to=settings.AUTH_USER_MODEL)),
                ('counted_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='cycle_counts', to=settings.AUTH_USER_MODEL)),
                ('salespoint', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cycle_counts', to='inventory.salespoint')),
            ],
            options={
                'ordering': ['-count_date', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='CycleCountLine',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('expected_qty', models.IntegerField(help_text='Quantité attendue (selon le système)')),
                ('actual_qty', models.IntegerField(help_text='Quantité réelle comptée')),
                ('variance', models.IntegerField(help_text='Écart (actual - expected)')),
                ('notes', models.TextField(blank=True, default='')),
                ('cycle_count', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lines', to='inventory.cyclecount')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='products.product')),
            ],
        ),
        migrations.CreateModel(
            name='DeliveryNote',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reference', models.CharField(help_text='Référence DN (ex: DN-WH-DDMMYY-0001)', max_length=50, unique=True)),
                ('status', models.CharField(choices=[('draft', 'Brouillon'), ('dispatched', 'Expédié'), ('delivered', 'Livré'), ('cancelled', 'Annulé')], default='draft', max_length=20)),
                ('notes', models.TextField(blank=True, default='')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('dispatched_at', models.DateTimeField(blank=True, null=True)),
                ('delivered_at', models.DateTimeField(blank=True, null=True)),
                ('dispatch_gps_lat', models.DecimalField(blank=True, decimal_places=8, max_digits=10, null=True)),
                ('dispatch_gps_lng', models.DecimalField(blank=True, decimal_places=8, max_digits=11, null=True)),
                ('delivery_gps_lat', models.DecimalField(blank=True, decimal_places=8, max_digits=10, null=True)),
                ('delivery_gps_lng', models.DecimalField(blank=True, decimal_places=8, max_digits=11, null=True)),
                ('photo_url', models.URLField(blank=True, default='')),
                ('signature_url', models.URLField(blank=True, default='')),
                ('dispatched_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='dns_dispatched', to=settings.AUTH_USER_MODEL)),
                ('received_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='dns_received', to=settings.AUTH_USER_MODEL)),
                ('to_salespoint', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='delivery_notes', to='inventory.salespoint')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='DeliveryLine',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity_dispatched', models.PositiveIntegerField(help_text='Quantité expédiée')),
                ('quantity_received', models.PositiveIntegerField(default=0, help_text='Quantité reçue (confirmée par le destinataire)')),
                ('unit_cost', models.DecimalField(decimal_places=2, help_text='Coût unitaire', max_digits=12)),
                ('notes', models.TextField(blank=True, default='')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='products.product')),
                ('dn', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lines', to='inventory.deliverynote')),
            ],
        ),
        migrations.CreateModel(
            name='GoodsReceivedNote',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reference', models.CharField(help_text='Référence GRN (ex: GRN-WH-DDMMYY-0001)', max_length=50, unique=True)),
                ('status', models.CharField(choices=[('draft', 'Brouillon'), ('confirmed', 'Confirmé'), ('cancelled', 'Annulé')], default='draft', max_length=20)),
                ('notes', models.TextField(blank=True, default='')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('confirmed_at', models.DateTimeField(blank=True, null=True)),
                ('gps_latitude', models.DecimalField(blank=True, decimal_places=8, max_digits=10, null=True)),
                ('gps_longitude', models.DecimalField(blank=True, decimal_places=8, max_digits=11, null=True)),
                ('photo_url', models.URLField(blank=True, default='')),
                ('signature_url', models.URLField(blank=True, default='')),
                ('provider', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='grns', to='providers.provider')),
                ('received_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='grns_received', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='GoodsReceivedLine',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity_received', models.PositiveIntegerField(help_text='Quantité réellement reçue')),
                ('quantity_ordered', models.PositiveIntegerField(default=0, help_text='Quantité commandée (pour référence)')),
                ('unit_cost', models.DecimalField(decimal_places=2, help_text='Coût unitaire', max_digits=12)),
                ('notes', models.TextField(blank=True, default='')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='products.product')),
                ('grn', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lines', to='inventory.goodsreceivednote')),
            ],
        ),
        migrations.CreateModel(
            name='WarehousePurchaseRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('draft', 'Brouillon'), ('sent', 'Envoyée'), ('acknowledged', 'Accusée'), ('cancelled', 'Annulée')], default='sent', max_length=20)),
                ('reference', models.CharField(blank=True, help_text='Reference number (e.g., CMD-WH-DDMMYY-0001)', max_length=50)),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('requested_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='warehouse_purchase_requests', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='WarehousePurchaseLine',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity_requested', models.PositiveIntegerField()),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='products.product')),
                ('request', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lines', to='inventory.warehousepurchaserequest')),
            ],
        ),
        migrations.AddIndex(
            model_name='cyclecount',
            index=models.Index(fields=['salespoint', 'count_date'], name='inventory_c_salespo_bca2ea_idx'),
        ),
        migrations.AddIndex(
            model_name='cyclecount',
            index=models.Index(fields=['status', 'count_date'], name='inventory_c_status_3f1f26_idx'),
        ),
        migrations.AddConstraint(
            model_name='cyclecount',
            constraint=models.UniqueConstraint(fields=('salespoint', 'count_date'), name='unique_cycle_count_per_sp_date'),
        ),
        migrations.AlterUniqueTogether(
            name='cyclecountline',
            unique_together={('cycle_count', 'product')},
        ),
        migrations.AddIndex(
            model_name='deliverynote',
            index=models.Index(fields=['reference'], name='inventory_d_referen_f8cec2_idx'),
        ),
        migrations.AddIndex(
            model_name='deliverynote',
            index=models.Index(fields=['status', 'created_at'], name='inventory_d_status_29d620_idx'),
        ),
        migrations.AddIndex(
            model_name='deliverynote',
            index=models.Index(fields=['to_salespoint', 'status'], name='inventory_d_to_sale_93d266_idx'),
        ),
        migrations.AddConstraint(
            model_name='deliveryline',
            constraint=models.CheckConstraint(condition=models.Q(('quantity_dispatched__gt', 0)), name='dn_line_qty_gt_0'),
        ),
        migrations.AlterUniqueTogether(
            name='deliveryline',
            unique_together={('dn', 'product')},
        ),
        migrations.AddIndex(
            model_name='goodsreceivednote',
            index=models.Index(fields=['reference'], name='inventory_g_referen_1f2f24_idx'),
        ),
        migrations.AddIndex(
            model_name='goodsreceivednote',
            index=models.Index(fields=['status', 'created_at'], name='inventory_g_status_d73494_idx'),
        ),
        migrations.AddConstraint(
            model_name='goodsreceivedline',
            constraint=models.CheckConstraint(condition=models.Q(('quantity_received__gt', 0)), name='grn_line_qty_gt_0'),
        ),
        migrations.AlterUniqueTogether(
            name='goodsreceivedline',
            unique_together={('grn', 'product')},
        ),
        migrations.AddIndex(
            model_name='warehousepurchaserequest',
            index=models.Index(fields=['status', 'created_at'], name='inventory_w_status_e06455_idx'),
        ),
        migrations.AddIndex(
            model_name='warehousepurchaserequest',
            index=models.Index(fields=['reference', 'created_at'], name='inventory_w_referen_6e5dd5_idx'),
        ),
        migrations.AddConstraint(
            model_name='warehousepurchaseline',
            constraint=models.CheckConstraint(condition=models.Q(('quantity_requested__gt', 0)), name='wh_cmd_qty_gt_0'),
        ),
        migrations.AlterUniqueTogether(
            name='warehousepurchaseline',
            unique_together={('request', 'product')},
        ),
    ]
